{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React from 'react';\nimport { useSelect } from 'downshift';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport ListBox, { PropTypes as ListBoxPropTypes } from '../ListBox';\nimport { Checkmark16, WarningFilled16 } from '@carbon/icons-react';\nvar prefix = settings.prefix;\n\nvar defaultItemToString = function defaultItemToString(item) {\n  if (typeof item === 'string') {\n    return item;\n  }\n\n  return item ? item.label : '';\n};\n\nfunction Dropdown(_ref) {\n  var _cx, _cx4;\n\n  var containerClassName = _ref.className,\n      disabled = _ref.disabled,\n      direction = _ref.direction,\n      items = _ref.items,\n      label = _ref.label,\n      ariaLabel = _ref.ariaLabel,\n      itemToString = _ref.itemToString,\n      itemToElement = _ref.itemToElement,\n      type = _ref.type,\n      size = _ref.size,\n      onChange = _ref.onChange,\n      id = _ref.id,\n      titleText = _ref.titleText,\n      helperText = _ref.helperText,\n      translateWithId = _ref.translateWithId,\n      light = _ref.light,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      initialSelectedItem = _ref.initialSelectedItem,\n      controlledSelectedItem = _ref.selectedItem;\n  var selectProps = {\n    items: items,\n    itemToString: itemToString,\n    initialSelectedItem: initialSelectedItem,\n    onSelectedItemChange: onSelectedItemChange\n  }; // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n\n  var _useSelect = useSelect(selectProps),\n      isOpen = _useSelect.isOpen,\n      getToggleButtonProps = _useSelect.getToggleButtonProps,\n      getLabelProps = _useSelect.getLabelProps,\n      getMenuProps = _useSelect.getMenuProps,\n      getItemProps = _useSelect.getItemProps,\n      highlightedIndex = _useSelect.highlightedIndex,\n      selectedItem = _useSelect.selectedItem;\n\n  var inline = type === 'inline';\n  var className = cx(\"\".concat(prefix, \"--dropdown\"), containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--invalid\"), invalid), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--open\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--inline\"), inline), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--\").concat(size), size), _defineProperty(_cx, \"\".concat(prefix, \"--list-box--up\"), direction === 'top'), _cx));\n  var titleClasses = cx(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--dropdown__wrapper\"), \"\".concat(prefix, \"--list-box__wrapper\"), (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline--invalid\"), inline && invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline--invalid\"), inline && invalid), _cx4)); // needs to be Capitalized for react to render it correctly\n\n  var ItemToElement = itemToElement;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperClasses\n  }, helperText) : null;\n\n  function onSelectedItemChange(_ref2) {\n    var selectedItem = _ref2.selectedItem;\n\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, titleText && /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React.createElement(ListBox, {\n    \"aria-label\": ariaLabel,\n    size: size,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    light: light,\n    isOpen: isOpen\n  }, invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n  }), /*#__PURE__*/React.createElement(\"button\", _extends({\n    id: id,\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    disabled: disabled,\n    \"aria-disabled\": disabled\n  }, getToggleButtonProps()), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  }, selectedItem ? itemToString(selectedItem) : label), /*#__PURE__*/React.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), /*#__PURE__*/React.createElement(ListBox.Menu, getMenuProps(), isOpen && items.map(function (item, index) {\n    var itemProps = getItemProps({\n      item: item,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index || selectedItem === item,\n      title: itemToElement ? item.text : itemToString(item)\n    }, itemProps), itemToElement ? /*#__PURE__*/React.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React.createElement(Checkmark16, {\n      className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n    }));\n  }))), !inline && !invalid && helper);\n}\n\nDropdown.propTypes = {\n  /**\n   * Disable the control\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list.\n   */\n  itemToString: PropTypes.func,\n\n  /**\n   * Function to render items as custom components instead of strings.\n   * Defaults to null and is overriden by a getter\n   */\n  itemToElement: PropTypes.func,\n\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component what kind of internal state changes are occuring.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Generic `label` that will be used as the textual representation of what\n   * this field is for\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Callback function for translating ListBoxMenuIcon SVG title\n   */\n  translateWithId: PropTypes.func,\n\n  /**\n   * 'aria-label' of the ListBox component.\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * The dropdown type, `default` or `inline`\n   */\n  type: ListBoxPropTypes.ListBoxType,\n\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `lg` or `xl` as an option.\n   */\n  size: ListBoxPropTypes.ListBoxSize,\n\n  /**\n   * In the case you want to control the dropdown selection entirely.\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Provide the title text that will be read by a screen reader when\n   * visiting this control\n   */\n  titleText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom'])\n};\nDropdown.defaultProps = {\n  disabled: false,\n  type: 'default',\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  light: false,\n  titleText: '',\n  helperText: '',\n  direction: 'bottom'\n};\nexport default Dropdown;","map":{"version":3,"sources":["/Users/nourhanel-shenawy/Documents/DarkMatter BootCamp/GitHub Zipped Projects/CARBON/Assignment-master/todo-app-with-redux/node_modules/carbon-components-react/es/components/Dropdown/Dropdown.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","useSelect","settings","cx","PropTypes","ListBox","ListBoxPropTypes","Checkmark16","WarningFilled16","prefix","defaultItemToString","item","label","Dropdown","_ref","_cx","_cx4","containerClassName","className","disabled","direction","items","ariaLabel","itemToString","itemToElement","type","size","onChange","id","titleText","helperText","translateWithId","light","invalid","invalidText","initialSelectedItem","controlledSelectedItem","selectedItem","selectProps","onSelectedItemChange","undefined","_useSelect","isOpen","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","highlightedIndex","inline","concat","titleClasses","helperClasses","wrapperClasses","ItemToElement","helper","createElement","_ref2","MenuIcon","Menu","map","index","itemProps","MenuItem","isActive","isHighlighted","title","text","propTypes","bool","array","isRequired","oneOfType","object","string","func","node","ListBoxType","ListBoxSize","oneOf","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { useSelect } from 'downshift';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport ListBox, { PropTypes as ListBoxPropTypes } from '../ListBox';\nimport { Checkmark16, WarningFilled16 } from '@carbon/icons-react';\nvar prefix = settings.prefix;\n\nvar defaultItemToString = function defaultItemToString(item) {\n  if (typeof item === 'string') {\n    return item;\n  }\n\n  return item ? item.label : '';\n};\n\nfunction Dropdown(_ref) {\n  var _cx, _cx4;\n\n  var containerClassName = _ref.className,\n      disabled = _ref.disabled,\n      direction = _ref.direction,\n      items = _ref.items,\n      label = _ref.label,\n      ariaLabel = _ref.ariaLabel,\n      itemToString = _ref.itemToString,\n      itemToElement = _ref.itemToElement,\n      type = _ref.type,\n      size = _ref.size,\n      onChange = _ref.onChange,\n      id = _ref.id,\n      titleText = _ref.titleText,\n      helperText = _ref.helperText,\n      translateWithId = _ref.translateWithId,\n      light = _ref.light,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      initialSelectedItem = _ref.initialSelectedItem,\n      controlledSelectedItem = _ref.selectedItem;\n  var selectProps = {\n    items: items,\n    itemToString: itemToString,\n    initialSelectedItem: initialSelectedItem,\n    onSelectedItemChange: onSelectedItemChange\n  }; // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n\n  var _useSelect = useSelect(selectProps),\n      isOpen = _useSelect.isOpen,\n      getToggleButtonProps = _useSelect.getToggleButtonProps,\n      getLabelProps = _useSelect.getLabelProps,\n      getMenuProps = _useSelect.getMenuProps,\n      getItemProps = _useSelect.getItemProps,\n      highlightedIndex = _useSelect.highlightedIndex,\n      selectedItem = _useSelect.selectedItem;\n\n  var inline = type === 'inline';\n  var className = cx(\"\".concat(prefix, \"--dropdown\"), containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--invalid\"), invalid), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--open\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--inline\"), inline), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--dropdown--\").concat(size), size), _defineProperty(_cx, \"\".concat(prefix, \"--list-box--up\"), direction === 'top'), _cx));\n  var titleClasses = cx(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--dropdown__wrapper\"), \"\".concat(prefix, \"--list-box__wrapper\"), (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline\"), inline), _defineProperty(_cx4, \"\".concat(prefix, \"--dropdown__wrapper--inline--invalid\"), inline && invalid), _defineProperty(_cx4, \"\".concat(prefix, \"--list-box__wrapper--inline--invalid\"), inline && invalid), _cx4)); // needs to be Capitalized for react to render it correctly\n\n  var ItemToElement = itemToElement;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperClasses\n  }, helperText) : null;\n\n  function onSelectedItemChange(_ref2) {\n    var selectedItem = _ref2.selectedItem;\n\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, titleText && /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React.createElement(ListBox, {\n    \"aria-label\": ariaLabel,\n    size: size,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    light: light,\n    isOpen: isOpen\n  }, invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n  }), /*#__PURE__*/React.createElement(\"button\", _extends({\n    id: id,\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    disabled: disabled,\n    \"aria-disabled\": disabled\n  }, getToggleButtonProps()), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  }, selectedItem ? itemToString(selectedItem) : label), /*#__PURE__*/React.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), /*#__PURE__*/React.createElement(ListBox.Menu, getMenuProps(), isOpen && items.map(function (item, index) {\n    var itemProps = getItemProps({\n      item: item,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index || selectedItem === item,\n      title: itemToElement ? item.text : itemToString(item)\n    }, itemProps), itemToElement ? /*#__PURE__*/React.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React.createElement(Checkmark16, {\n      className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n    }));\n  }))), !inline && !invalid && helper);\n}\n\nDropdown.propTypes = {\n  /**\n   * Disable the control\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list.\n   */\n  itemToString: PropTypes.func,\n\n  /**\n   * Function to render items as custom components instead of strings.\n   * Defaults to null and is overriden by a getter\n   */\n  itemToElement: PropTypes.func,\n\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component what kind of internal state changes are occuring.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Generic `label` that will be used as the textual representation of what\n   * this field is for\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Callback function for translating ListBoxMenuIcon SVG title\n   */\n  translateWithId: PropTypes.func,\n\n  /**\n   * 'aria-label' of the ListBox component.\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * The dropdown type, `default` or `inline`\n   */\n  type: ListBoxPropTypes.ListBoxType,\n\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `lg` or `xl` as an option.\n   */\n  size: ListBoxPropTypes.ListBoxSize,\n\n  /**\n   * In the case you want to control the dropdown selection entirely.\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * `true` to use the light version.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Provide the title text that will be read by a screen reader when\n   * visiting this control\n   */\n  titleText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom'])\n};\nDropdown.defaultProps = {\n  disabled: false,\n  type: 'default',\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  light: false,\n  titleText: '',\n  helperText: '',\n  direction: 'bottom'\n};\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}
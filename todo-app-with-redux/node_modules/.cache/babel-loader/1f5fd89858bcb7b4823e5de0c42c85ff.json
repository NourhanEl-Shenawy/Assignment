{"ast":null,"code":"import { ADD_TODO, TOGGLE_TODO, GET_DATA, DELETE_TODO } from \"../actionTypes\"; //import axios from 'axios';\n\nimport querystring from 'querystring';\nimport { addTodo, toggleTodo, getTodo, setFilter, getData } from \"../actions\"; // export let todo_length;\n// const initialState = {\n//   allIds: [1,2,3],\n//   byIds: {1:{\n//     content: \"Make bed\",\n//     completed: false\n//   },\n// 2: {\n//   content: \"Breakfast\",\n//   completed: false\n// },\n// 3: {\n//   content: \"STUDY\",\n//   completed: false\n// }}\n// };\n// const data =  fetchDataFromBackend();\n// console.log(\"DATAA RETREIVED\");\n// console.log(data);\n//How to fetch from node js:\n// const initialState = function fetchDataFromBackend(){\n// return  Axios.get('http://localhost:81/todo/App/api/todos/')\n//   .then((response) => {\n//   //  console.log(response.data);\n//   //  console.log(response.status);\n//   //  console.log(response.statusText);\n//   console.log(response.headers);\n//   //  console.log(response.config);\n//   console.log(\"response\");\n//   console.log(response.data);\n//   });\n//\n//\n// }\n//\n// function getUserData() {\n//   return new Promise((resolve, reject) => {\n//       Axios.get('http://localhost:81/todo/App/api/todos/')\n//         .then(res => resolve(res.data))\n//         .catch(err => reject(err));\n//     }\n//   );\n// }\n// let data;\n// const initialState= getUserData().then(function(userData) {\n//   data = {\n//     userData: userData, // ' ' or axios result\n//   };\n//   console.log(\"AXIOSs\")\n//   console.log(data.userData)\n// }).userData;\n//\n// console.log(data);\n// console.log(initialState);\n//const initialState = data;\n//Initializing the initial State\n\nconst initialState = {\n  allIds: [],\n  byIds: {}\n};\nconsole.log(\"todos.js\"); // export function getstateIndex(){\n//  return (initialState.allIds.length);\n// }\n\nexport default function (state = initialState, action) {\n  console.log(\"state function \");\n  console.log(state);\n  console.log(\"todossssss\");\n  console.log(`ACTION TYPE is ${action.type}`);\n  console.log(`Todo is ${action.todo}`); // if(action.type === 'GET_DATA'){\n  // //In order to get the length of items.\n  // console.log(\"DATA LENGTH\");\n  // todo_length = action.todo.allIds.length;\n  // console.log(todo_length);\n  //console.log(action.todo.allIds.length);\n  // console.log(`Current todo_length is: ${action.todo.allIds.length}`);\n  // }\n\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        console.log(`ACTION TYPE is ADD`);\n        return action.todo.data;\n      }\n\n    case GET_DATA:\n      {\n        console.log(`ACTION TYPE is GET`);\n        return action.todo;\n      }\n\n    case DELETE_TODO:\n      {\n        console.log(`ACTION TYPE is DELETE`);\n        return action.todo;\n      }\n\n    case TOGGLE_TODO:\n      {\n        console.log(`ACTION TYPE is TOGGLE`);\n        return action.todo.data; // const { id } = action.payload;\n        // console.log(\"TOGGLE_TODO\");\n        // return {\n        //   ...state,\n        //   byIds: {\n        //     ...state.byIds,\n        //     [id]: {\n        //       ...state.byIds[id],\n        //       completed: !state.byIds[id].completed\n        //     }\n        //   }\n        // };\n      }\n\n    default:\n      return state;\n  }\n} //export default todos;","map":{"version":3,"sources":["/Users/nourhanel-shenawy/Documents/DarkMatter BootCamp/GitHub Zipped Projects/CARBON/Assignment-master/todo-app-with-redux/src/redux/reducers/todos.js"],"names":["ADD_TODO","TOGGLE_TODO","GET_DATA","DELETE_TODO","querystring","addTodo","toggleTodo","getTodo","setFilter","getData","initialState","allIds","byIds","console","log","state","action","type","todo","data"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA2D,gBAA3D,C,CACA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,OAAlD,QAAgE,YAAhE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAIEC,OAAO,CAACC,GAAR,CAAY,UAAZ,E,CACF;AACA;AACA;;AACA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpDH,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBE,MAAM,CAACC,IAAK,EAA1C;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAUE,MAAM,CAACE,IAAK,EAAnC,EALoD,CAMpD;AACA;AACA;AACA;AACA;AACE;AACC;AACH;;AACA,UAAQF,MAAM,CAACC,IAAf;AACE,SAAKjB,QAAL;AAAe;AACjBa,QAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb;AACG,eAAOE,MAAM,CAACE,IAAP,CAAYC,IAAnB;AACC;;AACF,SAAKjB,QAAL;AAAe;AACjBW,QAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb;AACI,eAAOE,MAAM,CAACE,IAAd;AACD;;AACD,SAAKf,WAAL;AAAkB;AACpBU,QAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACI,eAAOE,MAAM,CAACE,IAAd;AACD;;AACD,SAAKjB,WAAL;AAAkB;AACpBY,QAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACI,eAAOE,MAAM,CAACE,IAAP,CAAYC,IAAnB,CAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD;AACE,aAAOJ,KAAP;AA9BJ;AAgCD,C,CAED","sourcesContent":["import {ADD_TODO, TOGGLE_TODO, GET_DATA, DELETE_TODO} from \"../actionTypes\";\n//import axios from 'axios';\nimport querystring from 'querystring';\nimport { addTodo, toggleTodo, getTodo, setFilter, getData} from \"../actions\";\n\n// export let todo_length;\n// const initialState = {\n//   allIds: [1,2,3],\n//   byIds: {1:{\n//     content: \"Make bed\",\n//     completed: false\n//   },\n// 2: {\n//   content: \"Breakfast\",\n//   completed: false\n// },\n// 3: {\n//   content: \"STUDY\",\n//   completed: false\n// }}\n// };\n// const data =  fetchDataFromBackend();\n// console.log(\"DATAA RETREIVED\");\n// console.log(data);\n\n//How to fetch from node js:\n// const initialState = function fetchDataFromBackend(){\n// return  Axios.get('http://localhost:81/todo/App/api/todos/')\n//   .then((response) => {\n//   //  console.log(response.data);\n//   //  console.log(response.status);\n//   //  console.log(response.statusText);\n//   console.log(response.headers);\n//   //  console.log(response.config);\n//   console.log(\"response\");\n//   console.log(response.data);\n//   });\n//\n//\n// }\n//\n\n\n// function getUserData() {\n//   return new Promise((resolve, reject) => {\n//       Axios.get('http://localhost:81/todo/App/api/todos/')\n//         .then(res => resolve(res.data))\n//         .catch(err => reject(err));\n//     }\n//   );\n// }\n\n// let data;\n// const initialState= getUserData().then(function(userData) {\n//   data = {\n//     userData: userData, // ' ' or axios result\n//   };\n//   console.log(\"AXIOSs\")\n//   console.log(data.userData)\n// }).userData;\n//\n// console.log(data);\n// console.log(initialState);\n//const initialState = data;\n\n//Initializing the initial State\nconst initialState = {\n  allIds: [],\n  byIds: {}\n}\n  console.log(\"todos.js\");\n// export function getstateIndex(){\n//  return (initialState.allIds.length);\n// }\nexport default function(state = initialState, action) {\n  console.log(\"state function \");\n  console.log(state);\n  console.log(\"todossssss\");\n  console.log(`ACTION TYPE is ${action.type}`);\n  console.log(`Todo is ${action.todo}`);\n  // if(action.type === 'GET_DATA'){\n  // //In order to get the length of items.\n  // console.log(\"DATA LENGTH\");\n  // todo_length = action.todo.allIds.length;\n  // console.log(todo_length);\n    //console.log(action.todo.allIds.length);\n     // console.log(`Current todo_length is: ${action.todo.allIds.length}`);\n  // }\n  switch (action.type) {\n    case ADD_TODO: {\n  console.log(`ACTION TYPE is ADD`);\n     return action.todo.data;\n     }\n    case GET_DATA: {\n  console.log(`ACTION TYPE is GET`);\n      return action.todo;\n    }\n    case DELETE_TODO: {\n  console.log(`ACTION TYPE is DELETE`);\n      return action.todo;\n    }\n    case TOGGLE_TODO: {\n  console.log(`ACTION TYPE is TOGGLE`);\n      return action.todo.data;\n      // const { id } = action.payload;\n      // console.log(\"TOGGLE_TODO\");\n      // return {\n      //   ...state,\n      //   byIds: {\n      //     ...state.byIds,\n      //     [id]: {\n      //       ...state.byIds[id],\n      //       completed: !state.byIds[id].completed\n      //     }\n      //   }\n      // };\n    }\n    default:\n      return state;\n  }\n}\n\n//export default todos;\n"]},"metadata":{},"sourceType":"module"}